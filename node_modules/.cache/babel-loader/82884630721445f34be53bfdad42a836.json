{"ast":null,"code":"const Endpoints = {\n  actions: {\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n    createOrUpdateEnvironmentSecret: [\"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n    createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n    createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n    deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    deleteEnvironmentSecret: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n    deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    disableSelectedRepositoryGithubActionsOrganization: [\"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    disableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"],\n    downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n    downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n    downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    enableSelectedRepositoryGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    enableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"],\n    getAllowedActionsOrganization: [\"GET /orgs/{org}/actions/permissions/selected-actions\"],\n    getAllowedActionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getEnvironmentPublicKey: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"],\n    getEnvironmentSecret: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    getGithubActionsPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions\"],\n    getGithubActionsPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions\"],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getPendingDeploymentsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    getRepoPermissions: [\"GET /repos/{owner}/{repo}/actions/permissions\", {}, {\n      renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"]\n    }],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getReviewsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n    getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"],\n    listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\"GET /orgs/{org}/actions/permissions/repositories\"],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n    listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    reviewPendingDeploymentsForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    setAllowedActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/selected-actions\"],\n    setAllowedActionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions\"],\n    setGithubActionsPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories\"]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createContentAttachment: [\"POST /content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n    getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n    listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n    removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n    getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n    getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"],\n    setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\"],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    deleteAnalysis: [\"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"],\n    getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n      renamedParameters: {\n        alert_id: \"alert_number\"\n      }\n    }],\n    getAnalysis: [\"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getConductCode: [\"GET /codes_of_conduct/{key}\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }],\n    getForRepo: [\"GET /repos/{owner}/{repo}/community/code_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }]\n  },\n  emojis: {\n    get: [\"GET /emojis\"]\n  },\n  enterpriseAdmin: {\n    disableSelectedOrganizationGithubActionsEnterprise: [\"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    enableSelectedOrganizationGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    getAllowedActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    getGithubActionsPermissionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions\"],\n    listSelectedOrganizationsEnabledGithubActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/organizations\"],\n    setAllowedActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions\"],\n    setSelectedOrganizationsEnabledGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations\"]\n  },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\"GET /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"]\n    }],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\"],\n    removeRestrictionsForYourPublicRepos: [\"DELETE /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"]\n    }],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\"PUT /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"]\n    }]\n  },\n  issues: {\n    addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", {\n      mediaType: {\n        previews: [\"mockingbird\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\"POST /markdown/raw\", {\n      headers: {\n        \"content-type\": \"text/plain; charset=utf-8\"\n      }\n    }]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n    deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n    getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n    getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n    setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n    unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    updateImport: [\"PATCH /repos/{owner}/{repo}/import\"]\n  },\n  orgs: {\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    get: [\"GET /orgs/{org}\"],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n    removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}\"],\n    deletePackageForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"],\n    deletePackageVersionForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    deletePackageVersionForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions\"],\n    getPackageForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}\"],\n    getPackageForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}\"],\n    getPackageForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}\"],\n    getPackageVersionForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    restorePackageForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/restore\"],\n    restorePackageForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/restore\"],\n    restorePackageVersionForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n    restorePackageVersionForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createCard: [\"POST /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createColumn: [\"POST /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForAuthenticatedUser: [\"POST /user/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForOrg: [\"POST /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    delete: [\"DELETE /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    get: [\"GET /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getCard: [\"GET /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getColumn: [\"GET /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCards: [\"GET /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listColumns: [\"GET /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForUser: [\"GET /users/{username}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    update: [\"PATCH /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\", {\n      mediaType: {\n        previews: [\"lydian\"]\n      }\n    }],\n    updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n  },\n  rateLimit: {\n    get: [\"GET /rate_limit\"]\n  },\n  reactions: {\n    createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteLegacy: [\"DELETE /reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }, {\n      deprecated: \"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy\"\n    }],\n    listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }]\n  },\n  repos: {\n    acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n    addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateEnvironment: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}\"],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\", {\n      mediaType: {\n        previews: [\"baptiste\"]\n      }\n    }],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    deleteAnEnvironment: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"],\n    deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    downloadArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\", {}, {\n      renamed: [\"repos\", \"downloadZipballArchive\"]\n    }],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n    getEnvironment: [\"GET /repos/{owner}/{repo}/environments/{environment_name}\"],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n    removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\", {}, {\n      renamed: [\"repos\", \"updateStatusCheckProtection\"]\n    }],\n    updateStatusCheckProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n      baseUrl: \"https://uploads.github.com\"\n    }]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\", {\n      mediaType: {\n        previews: [\"cloak\"]\n      }\n    }],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    getAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\"POST /user/emails\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\"POST /user/keys\"],\n    deleteEmailForAuthenticated: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\"],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\"],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\"GET /user/keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\"],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\nconst VERSION = \"4.13.3\";\n\nfunction endpointsToMethods(octokit, endpointsMap) {\n  const newMethods = {};\n\n  for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n    for (const [methodName, endpoint] of Object.entries(endpoints)) {\n      const [route, defaults, decorations] = endpoint;\n      const [method, url] = route.split(/ /);\n      const endpointDefaults = Object.assign({\n        method,\n        url\n      }, defaults);\n\n      if (!newMethods[scope]) {\n        newMethods[scope] = {};\n      }\n\n      const scopeMethods = newMethods[scope];\n\n      if (decorations) {\n        scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n        continue;\n      }\n\n      scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n  }\n\n  return newMethods;\n}\n\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  /* istanbul ignore next */\n\n  function withDecorations(...args) {\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    let options = requestWithDefaults.endpoint.merge(...args); // There are currently no other decorations than `.mapToData`\n\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: undefined\n      });\n      return requestWithDefaults(options);\n    }\n\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n    }\n\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n\n    if (decorations.renamedParameters) {\n      // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n      const options = requestWithDefaults.endpoint.merge(...args);\n\n      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n        if (name in options) {\n          octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n\n          if (!(alias in options)) {\n            options[alias] = options[name];\n          }\n\n          delete options[name];\n        }\n      }\n\n      return requestWithDefaults(options);\n    } // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n\n\n    return requestWithDefaults(...args);\n  }\n\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n\nfunction restEndpointMethods(octokit) {\n  return endpointsToMethods(octokit, Endpoints);\n}\n\nrestEndpointMethods.VERSION = VERSION;\nexport { restEndpointMethods };","map":{"version":3,"sources":["../dist-src/generated/endpoints.js","../dist-src/version.js","../dist-src/endpoints-to-methods.js","../dist-src/index.js"],"names":["ENDPOINTS"],"mappings":"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","sourcesContent":["const Endpoints = {\n    actions: {\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        cancelWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n        ],\n        createOrUpdateEnvironmentSecret: [\n            \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        createRegistrationTokenForOrg: [\n            \"POST /orgs/{org}/actions/runners/registration-token\",\n        ],\n        createRegistrationTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n        ],\n        createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n        createRemoveTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n        ],\n        createWorkflowDispatch: [\n            \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n        ],\n        deleteArtifact: [\n            \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n        ],\n        deleteEnvironmentSecret: [\n            \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        deleteSelfHostedRunnerFromOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n        ],\n        deleteSelfHostedRunnerFromRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        deleteWorkflowRunLogs: [\n            \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        disableSelectedRepositoryGithubActionsOrganization: [\n            \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        disableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n        ],\n        downloadArtifact: [\n            \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n        ],\n        downloadJobLogsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n        ],\n        downloadWorkflowRunLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        enableSelectedRepositoryGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        enableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n        ],\n        getAllowedActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        getAllowedActionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n        getEnvironmentPublicKey: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\",\n        ],\n        getEnvironmentSecret: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        getGithubActionsPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions\",\n        ],\n        getGithubActionsPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n        getPendingDeploymentsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        getRepoPermissions: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n            {},\n            { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n        ],\n        getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n        getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n        getReviewsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n        ],\n        getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n        getSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n        getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        getWorkflowRunUsage: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n        ],\n        getWorkflowUsage: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n        ],\n        listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n        listEnvironmentSecrets: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n        ],\n        listJobsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n        ],\n        listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n        listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n        listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n        listRunnerApplicationsForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n        ],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        listSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/repositories\",\n        ],\n        listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n        listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n        listWorkflowRunArtifacts: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n        ],\n        listWorkflowRuns: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n        ],\n        listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n        reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        reviewPendingDeploymentsForRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        setAllowedActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        setAllowedActionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions\",\n        ],\n        setGithubActionsPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories\",\n        ],\n    },\n    activity: {\n        checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n        deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n        deleteThreadSubscription: [\n            \"DELETE /notifications/threads/{thread_id}/subscription\",\n        ],\n        getFeeds: [\"GET /feeds\"],\n        getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n        getThread: [\"GET /notifications/threads/{thread_id}\"],\n        getThreadSubscriptionForAuthenticatedUser: [\n            \"GET /notifications/threads/{thread_id}/subscription\",\n        ],\n        listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n        listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n        listOrgEventsForAuthenticatedUser: [\n            \"GET /users/{username}/events/orgs/{org}\",\n        ],\n        listPublicEvents: [\"GET /events\"],\n        listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n        listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n        listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n        listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n        listReceivedPublicEventsForUser: [\n            \"GET /users/{username}/received_events/public\",\n        ],\n        listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n        listRepoNotificationsForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/notifications\",\n        ],\n        listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n        listReposStarredByUser: [\"GET /users/{username}/starred\"],\n        listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n        listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n        listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n        listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n        markNotificationsAsRead: [\"PUT /notifications\"],\n        markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n        markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n        setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n        setThreadSubscription: [\n            \"PUT /notifications/threads/{thread_id}/subscription\",\n        ],\n        starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n        unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n    },\n    apps: {\n        addRepoToInstallation: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        checkToken: [\"POST /applications/{client_id}/token\"],\n        createContentAttachment: [\n            \"POST /content_references/{content_reference_id}/attachments\",\n            { mediaType: { previews: [\"corsair\"] } },\n        ],\n        createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n        createInstallationAccessToken: [\n            \"POST /app/installations/{installation_id}/access_tokens\",\n        ],\n        deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n        deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n        deleteToken: [\"DELETE /applications/{client_id}/token\"],\n        getAuthenticated: [\"GET /app\"],\n        getBySlug: [\"GET /apps/{app_slug}\"],\n        getInstallation: [\"GET /app/installations/{installation_id}\"],\n        getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n        getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n        getSubscriptionPlanForAccount: [\n            \"GET /marketplace_listing/accounts/{account_id}\",\n        ],\n        getSubscriptionPlanForAccountStubbed: [\n            \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n        ],\n        getUserInstallation: [\"GET /users/{username}/installation\"],\n        getWebhookConfigForApp: [\"GET /app/hook/config\"],\n        listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n        listAccountsForPlanStubbed: [\n            \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n        ],\n        listInstallationReposForAuthenticatedUser: [\n            \"GET /user/installations/{installation_id}/repositories\",\n        ],\n        listInstallations: [\"GET /app/installations\"],\n        listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n        listPlans: [\"GET /marketplace_listing/plans\"],\n        listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n        listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n        listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n        listSubscriptionsForAuthenticatedUserStubbed: [\n            \"GET /user/marketplace_purchases/stubbed\",\n        ],\n        removeRepoFromInstallation: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        resetToken: [\"PATCH /applications/{client_id}/token\"],\n        revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n        scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n        suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n        unsuspendInstallation: [\n            \"DELETE /app/installations/{installation_id}/suspended\",\n        ],\n        updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n    },\n    billing: {\n        getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n        getGithubActionsBillingUser: [\n            \"GET /users/{username}/settings/billing/actions\",\n        ],\n        getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n        getGithubPackagesBillingUser: [\n            \"GET /users/{username}/settings/billing/packages\",\n        ],\n        getSharedStorageBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/shared-storage\",\n        ],\n        getSharedStorageBillingUser: [\n            \"GET /users/{username}/settings/billing/shared-storage\",\n        ],\n    },\n    checks: {\n        create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n        createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n        get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n        getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n        listAnnotations: [\n            \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n        ],\n        listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n        listForSuite: [\n            \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n        ],\n        listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n        rerequestSuite: [\n            \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n        ],\n        setSuitesPreferences: [\n            \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    },\n    codeScanning: {\n        deleteAnalysis: [\n            \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n        ],\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n            {},\n            { renamedParameters: { alert_id: \"alert_number\" } },\n        ],\n        getAnalysis: [\n            \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n        ],\n        getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n        listAlertsInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n        ],\n        listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n        ],\n        uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n    },\n    codesOfConduct: {\n        getAllCodesOfConduct: [\n            \"GET /codes_of_conduct\",\n            { mediaType: { previews: [\"scarlet-witch\"] } },\n        ],\n        getConductCode: [\n            \"GET /codes_of_conduct/{key}\",\n            { mediaType: { previews: [\"scarlet-witch\"] } },\n        ],\n        getForRepo: [\n            \"GET /repos/{owner}/{repo}/community/code_of_conduct\",\n            { mediaType: { previews: [\"scarlet-witch\"] } },\n        ],\n    },\n    emojis: { get: [\"GET /emojis\"] },\n    enterpriseAdmin: {\n        disableSelectedOrganizationGithubActionsEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        enableSelectedOrganizationGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        getAllowedActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        getGithubActionsPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions\",\n        ],\n        listSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n        setAllowedActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions\",\n        ],\n        setSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n    },\n    gists: {\n        checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n        create: [\"POST /gists\"],\n        createComment: [\"POST /gists/{gist_id}/comments\"],\n        delete: [\"DELETE /gists/{gist_id}\"],\n        deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n        fork: [\"POST /gists/{gist_id}/forks\"],\n        get: [\"GET /gists/{gist_id}\"],\n        getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n        getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n        list: [\"GET /gists\"],\n        listComments: [\"GET /gists/{gist_id}/comments\"],\n        listCommits: [\"GET /gists/{gist_id}/commits\"],\n        listForUser: [\"GET /users/{username}/gists\"],\n        listForks: [\"GET /gists/{gist_id}/forks\"],\n        listPublic: [\"GET /gists/public\"],\n        listStarred: [\"GET /gists/starred\"],\n        star: [\"PUT /gists/{gist_id}/star\"],\n        unstar: [\"DELETE /gists/{gist_id}/star\"],\n        update: [\"PATCH /gists/{gist_id}\"],\n        updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n    },\n    git: {\n        createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n        createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n        createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n        createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n        createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n        deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n        getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n        getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n        getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n        getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n        listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n        updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n    },\n    gitignore: {\n        getAllTemplates: [\"GET /gitignore/templates\"],\n        getTemplate: [\"GET /gitignore/templates/{name}\"],\n    },\n    interactions: {\n        getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n        getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n        getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n        getRestrictionsForYourPublicRepos: [\n            \"GET /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n        ],\n        removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n        removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n        removeRestrictionsForRepo: [\n            \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n        ],\n        removeRestrictionsForYourPublicRepos: [\n            \"DELETE /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n        ],\n        setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n        setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n        setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n        setRestrictionsForYourPublicRepos: [\n            \"PUT /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n        ],\n    },\n    issues: {\n        addAssignees: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n        create: [\"POST /repos/{owner}/{repo}/issues\"],\n        createComment: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n        ],\n        createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n        createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n        deleteComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n        ],\n        deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n        deleteMilestone: [\n            \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n        getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n        getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n        getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n        list: [\"GET /issues\"],\n        listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n        listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n        listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n        listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n        listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n        listEventsForTimeline: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n            { mediaType: { previews: [\"mockingbird\"] } },\n        ],\n        listForAuthenticatedUser: [\"GET /user/issues\"],\n        listForOrg: [\"GET /orgs/{org}/issues\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n        listLabelsForMilestone: [\n            \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n        ],\n        listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n        listLabelsOnIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n        lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        removeAllLabels: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        removeAssignees: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        removeLabel: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n        ],\n        setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n        updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n        updateMilestone: [\n            \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n    },\n    licenses: {\n        get: [\"GET /licenses/{license}\"],\n        getAllCommonlyUsed: [\"GET /licenses\"],\n        getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n    },\n    markdown: {\n        render: [\"POST /markdown\"],\n        renderRaw: [\n            \"POST /markdown/raw\",\n            { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n        ],\n    },\n    meta: {\n        get: [\"GET /meta\"],\n        getOctocat: [\"GET /octocat\"],\n        getZen: [\"GET /zen\"],\n        root: [\"GET /\"],\n    },\n    migrations: {\n        cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n        deleteArchiveForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/archive\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        deleteArchiveForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        downloadArchiveForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        getArchiveForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/archive\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n        getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n        getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n        getStatusForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        getStatusForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        listForAuthenticatedUser: [\n            \"GET /user/migrations\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        listForOrg: [\n            \"GET /orgs/{org}/migrations\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        listReposForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        listReposForUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n        setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n        startForAuthenticatedUser: [\"POST /user/migrations\"],\n        startForOrg: [\"POST /orgs/{org}/migrations\"],\n        startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n        unlockRepoForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        unlockRepoForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n            { mediaType: { previews: [\"wyandotte\"] } },\n        ],\n        updateImport: [\"PATCH /repos/{owner}/{repo}/import\"],\n    },\n    orgs: {\n        blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n        cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n        checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n        checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n        checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n        convertMemberToOutsideCollaborator: [\n            \"PUT /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        createInvitation: [\"POST /orgs/{org}/invitations\"],\n        createWebhook: [\"POST /orgs/{org}/hooks\"],\n        deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n        get: [\"GET /orgs/{org}\"],\n        getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n        getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n        getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n        getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n        list: [\"GET /organizations\"],\n        listAppInstallations: [\"GET /orgs/{org}/installations\"],\n        listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n        listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n        listForAuthenticatedUser: [\"GET /user/orgs\"],\n        listForUser: [\"GET /users/{username}/orgs\"],\n        listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n        listMembers: [\"GET /orgs/{org}/members\"],\n        listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n        listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n        listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n        listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n        listWebhooks: [\"GET /orgs/{org}/hooks\"],\n        pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n        removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n        removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n        removeOutsideCollaborator: [\n            \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        removePublicMembershipForAuthenticatedUser: [\n            \"DELETE /orgs/{org}/public_members/{username}\",\n        ],\n        setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n        setPublicMembershipForAuthenticatedUser: [\n            \"PUT /orgs/{org}/public_members/{username}\",\n        ],\n        unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n        update: [\"PATCH /orgs/{org}\"],\n        updateMembershipForAuthenticatedUser: [\n            \"PATCH /user/memberships/orgs/{org}\",\n        ],\n        updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n        updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n    },\n    packages: {\n        deletePackageForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageVersionForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByAnOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getPackageForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageVersionForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        restorePackageForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/restore\",\n        ],\n        restorePackageForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore\",\n        ],\n        restorePackageVersionForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n    },\n    projects: {\n        addCollaborator: [\n            \"PUT /projects/{project_id}/collaborators/{username}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        createCard: [\n            \"POST /projects/columns/{column_id}/cards\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        createColumn: [\n            \"POST /projects/{project_id}/columns\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        createForAuthenticatedUser: [\n            \"POST /user/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        createForOrg: [\n            \"POST /orgs/{org}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        createForRepo: [\n            \"POST /repos/{owner}/{repo}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        delete: [\n            \"DELETE /projects/{project_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        deleteCard: [\n            \"DELETE /projects/columns/cards/{card_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        deleteColumn: [\n            \"DELETE /projects/columns/{column_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        get: [\n            \"GET /projects/{project_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        getCard: [\n            \"GET /projects/columns/cards/{card_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        getColumn: [\n            \"GET /projects/columns/{column_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        getPermissionForUser: [\n            \"GET /projects/{project_id}/collaborators/{username}/permission\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listCards: [\n            \"GET /projects/columns/{column_id}/cards\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listCollaborators: [\n            \"GET /projects/{project_id}/collaborators\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listColumns: [\n            \"GET /projects/{project_id}/columns\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listForOrg: [\n            \"GET /orgs/{org}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listForRepo: [\n            \"GET /repos/{owner}/{repo}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listForUser: [\n            \"GET /users/{username}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        moveCard: [\n            \"POST /projects/columns/cards/{card_id}/moves\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        moveColumn: [\n            \"POST /projects/columns/{column_id}/moves\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        removeCollaborator: [\n            \"DELETE /projects/{project_id}/collaborators/{username}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        update: [\n            \"PATCH /projects/{project_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        updateCard: [\n            \"PATCH /projects/columns/cards/{card_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        updateColumn: [\n            \"PATCH /projects/columns/{column_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n    },\n    pulls: {\n        checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        create: [\"POST /repos/{owner}/{repo}/pulls\"],\n        createReplyForReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n        ],\n        createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        createReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        deletePendingReview: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        deleteReviewComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n        dismissReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        getReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n        list: [\"GET /repos/{owner}/{repo}/pulls\"],\n        listCommentsForReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n        listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n        listRequestedReviewers: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        listReviewComments: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n        listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        removeRequestedReviewers: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        requestReviewers: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        submitReview: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        updateBranch: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n            { mediaType: { previews: [\"lydian\"] } },\n        ],\n        updateReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        updateReviewComment: [\n            \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n    },\n    rateLimit: { get: [\"GET /rate_limit\"] },\n    reactions: {\n        createForCommitComment: [\n            \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        createForIssue: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        createForIssueComment: [\n            \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        createForPullRequestReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        createForTeamDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        createForTeamDiscussionInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForCommitComment: [\n            \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForIssue: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForIssueComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForPullRequestComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForTeamDiscussion: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteForTeamDiscussionComment: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        deleteLegacy: [\n            \"DELETE /reactions/{reaction_id}\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n            {\n                deprecated: \"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy\",\n            },\n        ],\n        listForCommitComment: [\n            \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        listForIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        listForIssueComment: [\n            \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        listForPullRequestReviewComment: [\n            \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        listForTeamDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n        listForTeamDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n            { mediaType: { previews: [\"squirrel-girl\"] } },\n        ],\n    },\n    repos: {\n        acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n        addAppAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n        addStatusCheckContexts: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        addTeamAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        addUserAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n        checkVulnerabilityAlerts: [\n            \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n            { mediaType: { previews: [\"dorian\"] } },\n        ],\n        compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n        createCommitComment: [\n            \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        createCommitSignatureProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n            { mediaType: { previews: [\"zzzax\"] } },\n        ],\n        createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n        createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n        createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n        createDeploymentStatus: [\n            \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n        createForAuthenticatedUser: [\"POST /user/repos\"],\n        createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n        createInOrg: [\"POST /orgs/{org}/repos\"],\n        createOrUpdateEnvironment: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n        createPagesSite: [\n            \"POST /repos/{owner}/{repo}/pages\",\n            { mediaType: { previews: [\"switcheroo\"] } },\n        ],\n        createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n        createUsingTemplate: [\n            \"POST /repos/{template_owner}/{template_repo}/generate\",\n            { mediaType: { previews: [\"baptiste\"] } },\n        ],\n        createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n        declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n        delete: [\"DELETE /repos/{owner}/{repo}\"],\n        deleteAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        deleteAdminBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        deleteAnEnvironment: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        deleteBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n        deleteCommitSignatureProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n            { mediaType: { previews: [\"zzzax\"] } },\n        ],\n        deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n        deleteDeployment: [\n            \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n        ],\n        deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n        deleteInvitation: [\n            \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        deletePagesSite: [\n            \"DELETE /repos/{owner}/{repo}/pages\",\n            { mediaType: { previews: [\"switcheroo\"] } },\n        ],\n        deletePullRequestReviewProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n        deleteReleaseAsset: [\n            \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        disableAutomatedSecurityFixes: [\n            \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n            { mediaType: { previews: [\"london\"] } },\n        ],\n        disableVulnerabilityAlerts: [\n            \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n            { mediaType: { previews: [\"dorian\"] } },\n        ],\n        downloadArchive: [\n            \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n            {},\n            { renamed: [\"repos\", \"downloadZipballArchive\"] },\n        ],\n        downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n        downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n        enableAutomatedSecurityFixes: [\n            \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n            { mediaType: { previews: [\"london\"] } },\n        ],\n        enableVulnerabilityAlerts: [\n            \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n            { mediaType: { previews: [\"dorian\"] } },\n        ],\n        get: [\"GET /repos/{owner}/{repo}\"],\n        getAccessRestrictions: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        getAdminBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n        getAllStatusCheckContexts: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n        ],\n        getAllTopics: [\n            \"GET /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        getAppsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n        ],\n        getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n        getBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n        getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n        getCollaboratorPermissionLevel: [\n            \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n        ],\n        getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n        getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n        getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n        getCommitSignatureProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n            { mediaType: { previews: [\"zzzax\"] } },\n        ],\n        getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n        getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n        getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n        getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n        getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n        getDeploymentStatus: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n        ],\n        getEnvironment: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n        getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n        getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n        getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n        getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n        getPullRequestReviewProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n        getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n        getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n        getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n        getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n        getStatusChecksProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        getTeamsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n        ],\n        getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n        getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n        getUsersWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n        ],\n        getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n        getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        getWebhookConfigForRepo: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n        listBranchesForHeadCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n            { mediaType: { previews: [\"groot\"] } },\n        ],\n        listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n        listCommentsForCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n        listCommitStatusesForRef: [\n            \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n        listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n        listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n        listDeploymentStatuses: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n        listForAuthenticatedUser: [\"GET /user/repos\"],\n        listForOrg: [\"GET /orgs/{org}/repos\"],\n        listForUser: [\"GET /users/{username}/repos\"],\n        listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n        listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n        listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n        listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n        listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n        listPublic: [\"GET /repositories\"],\n        listPullRequestsAssociatedWithCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n            { mediaType: { previews: [\"groot\"] } },\n        ],\n        listReleaseAssets: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n        ],\n        listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n        listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n        listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n        listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n        merge: [\"POST /repos/{owner}/{repo}/merges\"],\n        pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n        removeAppAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        removeCollaborator: [\n            \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n        ],\n        removeStatusCheckContexts: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        removeStatusCheckProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        removeTeamAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        removeUserAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n        replaceAllTopics: [\n            \"PUT /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n        setAdminBranchProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        setAppAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        setStatusCheckContexts: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        setTeamAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        setUserAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n        transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n        update: [\"PATCH /repos/{owner}/{repo}\"],\n        updateBranchProtection: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n        updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n        updateInvitation: [\n            \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        updatePullRequestReviewProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n        updateReleaseAsset: [\n            \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        updateStatusCheckPotection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n            {},\n            { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n        ],\n        updateStatusCheckProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        updateWebhookConfigForRepo: [\n            \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        uploadReleaseAsset: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n            { baseUrl: \"https://uploads.github.com\" },\n        ],\n    },\n    search: {\n        code: [\"GET /search/code\"],\n        commits: [\"GET /search/commits\", { mediaType: { previews: [\"cloak\"] } }],\n        issuesAndPullRequests: [\"GET /search/issues\"],\n        labels: [\"GET /search/labels\"],\n        repos: [\"GET /search/repositories\"],\n        topics: [\"GET /search/topics\", { mediaType: { previews: [\"mercy\"] } }],\n        users: [\"GET /search/users\"],\n    },\n    secretScanning: {\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n    },\n    teams: {\n        addOrUpdateMembershipForUserInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        addOrUpdateProjectPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        addOrUpdateRepoPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        checkPermissionsForProjectInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        checkPermissionsForRepoInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        create: [\"POST /orgs/{org}/teams\"],\n        createDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n        deleteDiscussionCommentInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        deleteDiscussionInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n        getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n        getDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        getDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        getMembershipForUserInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        list: [\"GET /orgs/{org}/teams\"],\n        listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n        listDiscussionCommentsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n        listForAuthenticatedUser: [\"GET /user/teams\"],\n        listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n        listPendingInvitationsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n        ],\n        listProjectsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects\",\n            { mediaType: { previews: [\"inertia\"] } },\n        ],\n        listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n        removeMembershipForUserInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        removeProjectInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        removeRepoInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        updateDiscussionCommentInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        updateDiscussionInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n    },\n    users: {\n        addEmailForAuthenticated: [\"POST /user/emails\"],\n        block: [\"PUT /user/blocks/{username}\"],\n        checkBlocked: [\"GET /user/blocks/{username}\"],\n        checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n        checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n        createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\"],\n        createPublicSshKeyForAuthenticated: [\"POST /user/keys\"],\n        deleteEmailForAuthenticated: [\"DELETE /user/emails\"],\n        deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n        deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\"],\n        follow: [\"PUT /user/following/{username}\"],\n        getAuthenticated: [\"GET /user\"],\n        getByUsername: [\"GET /users/{username}\"],\n        getContextForUser: [\"GET /users/{username}/hovercard\"],\n        getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n        getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\"],\n        list: [\"GET /users\"],\n        listBlockedByAuthenticated: [\"GET /user/blocks\"],\n        listEmailsForAuthenticated: [\"GET /user/emails\"],\n        listFollowedByAuthenticated: [\"GET /user/following\"],\n        listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n        listFollowersForUser: [\"GET /users/{username}/followers\"],\n        listFollowingForUser: [\"GET /users/{username}/following\"],\n        listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\"],\n        listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n        listPublicEmailsForAuthenticated: [\"GET /user/public_emails\"],\n        listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n        listPublicSshKeysForAuthenticated: [\"GET /user/keys\"],\n        setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\"],\n        unblock: [\"DELETE /user/blocks/{username}\"],\n        unfollow: [\"DELETE /user/following/{username}\"],\n        updateAuthenticated: [\"PATCH /user\"],\n    },\n};\nexport default Endpoints;\n","export const VERSION = \"4.13.3\";\n","export function endpointsToMethods(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n        for (const [methodName, endpoint] of Object.entries(endpoints)) {\n            const [route, defaults, decorations] = endpoint;\n            const [method, url] = route.split(/ /);\n            const endpointDefaults = Object.assign({ method, url }, defaults);\n            if (!newMethods[scope]) {\n                newMethods[scope] = {};\n            }\n            const scopeMethods = newMethods[scope];\n            if (decorations) {\n                scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n                continue;\n            }\n            scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n        }\n    }\n    return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    /* istanbul ignore next */\n    function withDecorations(...args) {\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        let options = requestWithDefaults.endpoint.merge(...args);\n        // There are currently no other decorations than `.mapToData`\n        if (decorations.mapToData) {\n            options = Object.assign({}, options, {\n                data: options[decorations.mapToData],\n                [decorations.mapToData]: undefined,\n            });\n            return requestWithDefaults(options);\n        }\n        if (decorations.renamed) {\n            const [newScope, newMethodName] = decorations.renamed;\n            octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n        }\n        if (decorations.deprecated) {\n            octokit.log.warn(decorations.deprecated);\n        }\n        if (decorations.renamedParameters) {\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n            const options = requestWithDefaults.endpoint.merge(...args);\n            for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n                if (name in options) {\n                    octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n                    if (!(alias in options)) {\n                        options[alias] = options[name];\n                    }\n                    delete options[name];\n                }\n            }\n            return requestWithDefaults(options);\n        }\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n}\n","import ENDPOINTS from \"./generated/endpoints\";\nimport { VERSION } from \"./version\";\nimport { endpointsToMethods } from \"./endpoints-to-methods\";\nexport function restEndpointMethods(octokit) {\n    return endpointsToMethods(octokit, ENDPOINTS);\n}\nrestEndpointMethods.VERSION = VERSION;\n"]},"metadata":{},"sourceType":"module"}