{"ast":null,"code":"var _jsxFileName = \"/home/muhammad-shayan/workspace/dubbizle-interview/src/components/GistList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getPublicGists, getGistForUser } from '../services/gistService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GistList() {\n  _s();\n\n  // Declare a new state variable, which we'll call \"gists\"  \n  const [gists, setGists] = useState([]); //call service and fetch data\n\n  async function fetchGists(search, cb) {\n    try {\n      let response = [];\n      if (search.length > 0) response = await getGistForUser(search);else response = await getPublicGists();\n      if (typeof response.data !== undefined) cb(response.data);\n    } catch (error) {\n      // TODO: handle error cases\n      cb([]);\n    }\n  } // Similar to componentDidMount\n\n\n  useEffect(() => {\n    fetchGists(\"\", function (gistsResponse) {\n      console.log(gistsResponse);\n      setGists(gistsResponse);\n      console.log(gists);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GistList, \"VQvCpi/ctQGEBSKGk5APk0hIbzk=\");\n\n_c = GistList;\nconst Wrapper = styled.div`\n  width: 50%;\n  margin: auto;\n  padding: 10px 0px;\n`;\n_c2 = Wrapper;\nexport default GistList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GistList\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/muhammad-shayan/workspace/dubbizle-interview/src/components/GistList.js"],"names":["React","useEffect","useState","styled","getPublicGists","getGistForUser","GistList","gists","setGists","fetchGists","search","cb","response","length","data","undefined","error","gistsResponse","console","log","Wrapper","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,yBAA7C;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AACnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAInB;;AACA,iBAAeO,UAAf,CAA0BC,MAA1B,EAAkCC,EAAlC,EAAsC;AACrC,QAAI;AACH,UAAIC,QAAQ,GAAG,EAAf;AAEA,UAAGF,MAAM,CAACG,MAAP,GAAgB,CAAnB,EACCD,QAAQ,GAAG,MAAMP,cAAc,CAACK,MAAD,CAA/B,CADD,KAGCE,QAAQ,GAAG,MAAMR,cAAc,EAA/B;AAED,UAAG,OAAOQ,QAAQ,CAACE,IAAhB,KAAyBC,SAA5B,EACCJ,EAAE,CAACC,QAAQ,CAACE,IAAV,CAAF;AACD,KAVD,CAUE,OAAME,KAAN,EAAa;AACd;AACAL,MAAAA,EAAE,CAAC,EAAD,CAAF;AACA;AACD,GApBkB,CAsBnB;;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,UAAU,CAAC,EAAD,EAAK,UAASQ,aAAT,EAAwB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAT,MAAAA,QAAQ,CAACS,aAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,KAJS,CAAV;AAKA,GANQ,EAMN,EANM,CAAT;AAQC,sBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApCQD,Q;;KAAAA,Q;AAsCT,MAAMc,OAAO,GAAGjB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,O;AAMN,eAAed,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport {getPublicGists, getGistForUser} from '../services/gistService';\n\nfunction GistList() {\n\t// Declare a new state variable, which we'll call \"gists\"  \n\tconst [gists, setGists] = useState([]);\n\n\t//call service and fetch data\n\tasync function fetchGists(search, cb) {\n\t\ttry {\n\t\t\tlet response = [];\n\t\t\t\n\t\t\tif(search.length > 0)\n\t\t\t\tresponse = await getGistForUser(search);\n\t\t\telse\n\t\t\t\tresponse = await getPublicGists();\n\n\t\t\tif(typeof response.data !== undefined)\n\t\t\t\tcb(response.data);\n\t\t} catch(error) {\n\t\t\t// TODO: handle error cases\n\t\t\tcb([]);\n\t\t}\n\t}\n\n\t// Similar to componentDidMount\n\tuseEffect(() => {    \n\t\tfetchGists(\"\", function(gistsResponse) {\n\t\t\tconsole.log(gistsResponse);\n\t\t\tsetGists(gistsResponse);\n\t\t\tconsole.log(gists);\n\t\t});\n\t}, []);\n\n  return (\n    <Wrapper>\n      \n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 50%;\n  margin: auto;\n  padding: 10px 0px;\n`;\n\nexport default GistList\n"]},"metadata":{},"sourceType":"module"}